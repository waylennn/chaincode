// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/waylennn/chaincode/adopter/protos/binary/db.proto

package binary // import "github.com/waylennn/chaincode/adopter/protos/binary"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Binlog struct {
	Data                 [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binlog) Reset()         { *m = Binlog{} }
func (m *Binlog) String() string { return proto.CompactTextString(m) }
func (*Binlog) ProtoMessage()    {}
func (*Binlog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{0}
}
func (m *Binlog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binlog.Unmarshal(m, b)
}
func (m *Binlog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binlog.Marshal(b, m, deterministic)
}
func (dst *Binlog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binlog.Merge(dst, src)
}
func (m *Binlog) XXX_Size() int {
	return xxx_messageInfo_Binlog.Size(m)
}
func (m *Binlog) XXX_DiscardUnknown() {
	xxx_messageInfo_Binlog.DiscardUnknown(m)
}

var xxx_messageInfo_Binlog proto.InternalMessageInfo

func (m *Binlog) GetData() [][]byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BinlogData struct {
	Sequence             uint64   `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Log                  []byte   `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Stat                 *Stat    `protobuf:"bytes,3,opt,name=stat,proto3" json:"stat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BinlogData) Reset()         { *m = BinlogData{} }
func (m *BinlogData) String() string { return proto.CompactTextString(m) }
func (*BinlogData) ProtoMessage()    {}
func (*BinlogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{1}
}
func (m *BinlogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BinlogData.Unmarshal(m, b)
}
func (m *BinlogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BinlogData.Marshal(b, m, deterministic)
}
func (dst *BinlogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BinlogData.Merge(dst, src)
}
func (m *BinlogData) XXX_Size() int {
	return xxx_messageInfo_BinlogData.Size(m)
}
func (m *BinlogData) XXX_DiscardUnknown() {
	xxx_messageInfo_BinlogData.DiscardUnknown(m)
}

var xxx_messageInfo_BinlogData proto.InternalMessageInfo

func (m *BinlogData) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *BinlogData) GetLog() []byte {
	if m != nil {
		return m.Log
	}
	return nil
}

func (m *BinlogData) GetStat() *Stat {
	if m != nil {
		return m.Stat
	}
	return nil
}

type Stats struct {
	Data                 []*Stat  `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{2}
}
func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (dst *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(dst, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetData() []*Stat {
	if m != nil {
		return m.Data
	}
	return nil
}

type Stat struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Data                 []*DBStat            `protobuf:"bytes,2,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Stat) Reset()         { *m = Stat{} }
func (m *Stat) String() string { return proto.CompactTextString(m) }
func (*Stat) ProtoMessage()    {}
func (*Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{3}
}
func (m *Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stat.Unmarshal(m, b)
}
func (m *Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stat.Marshal(b, m, deterministic)
}
func (dst *Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stat.Merge(dst, src)
}
func (m *Stat) XXX_Size() int {
	return xxx_messageInfo_Stat.Size(m)
}
func (m *Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Stat proto.InternalMessageInfo

func (m *Stat) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Stat) GetData() []*DBStat {
	if m != nil {
		return m.Data
	}
	return nil
}

type DBStat struct {
	Name                 string       `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	TableStat            []*TableStat `protobuf:"bytes,2,rep,name=tableStat,proto3" json:"tableStat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *DBStat) Reset()         { *m = DBStat{} }
func (m *DBStat) String() string { return proto.CompactTextString(m) }
func (*DBStat) ProtoMessage()    {}
func (*DBStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{4}
}
func (m *DBStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBStat.Unmarshal(m, b)
}
func (m *DBStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBStat.Marshal(b, m, deterministic)
}
func (dst *DBStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBStat.Merge(dst, src)
}
func (m *DBStat) XXX_Size() int {
	return xxx_messageInfo_DBStat.Size(m)
}
func (m *DBStat) XXX_DiscardUnknown() {
	xxx_messageInfo_DBStat.DiscardUnknown(m)
}

var xxx_messageInfo_DBStat proto.InternalMessageInfo

func (m *DBStat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DBStat) GetTableStat() []*TableStat {
	if m != nil {
		return m.TableStat
	}
	return nil
}

type TableStat struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Dml                  *DML     `protobuf:"bytes,2,opt,name=dml,proto3" json:"dml,omitempty"`
	Ddl                  *DDL     `protobuf:"bytes,3,opt,name=ddl,proto3" json:"ddl,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableStat) Reset()         { *m = TableStat{} }
func (m *TableStat) String() string { return proto.CompactTextString(m) }
func (*TableStat) ProtoMessage()    {}
func (*TableStat) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{5}
}
func (m *TableStat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableStat.Unmarshal(m, b)
}
func (m *TableStat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableStat.Marshal(b, m, deterministic)
}
func (dst *TableStat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableStat.Merge(dst, src)
}
func (m *TableStat) XXX_Size() int {
	return xxx_messageInfo_TableStat.Size(m)
}
func (m *TableStat) XXX_DiscardUnknown() {
	xxx_messageInfo_TableStat.DiscardUnknown(m)
}

var xxx_messageInfo_TableStat proto.InternalMessageInfo

func (m *TableStat) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TableStat) GetDml() *DML {
	if m != nil {
		return m.Dml
	}
	return nil
}

func (m *TableStat) GetDdl() *DDL {
	if m != nil {
		return m.Ddl
	}
	return nil
}

type DML struct {
	Adds                 uint64   `protobuf:"varint,1,opt,name=adds,proto3" json:"adds,omitempty"`
	Updates              uint64   `protobuf:"varint,2,opt,name=updates,proto3" json:"updates,omitempty"`
	Deletes              uint64   `protobuf:"varint,3,opt,name=deletes,proto3" json:"deletes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DML) Reset()         { *m = DML{} }
func (m *DML) String() string { return proto.CompactTextString(m) }
func (*DML) ProtoMessage()    {}
func (*DML) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{6}
}
func (m *DML) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DML.Unmarshal(m, b)
}
func (m *DML) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DML.Marshal(b, m, deterministic)
}
func (dst *DML) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DML.Merge(dst, src)
}
func (m *DML) XXX_Size() int {
	return xxx_messageInfo_DML.Size(m)
}
func (m *DML) XXX_DiscardUnknown() {
	xxx_messageInfo_DML.DiscardUnknown(m)
}

var xxx_messageInfo_DML proto.InternalMessageInfo

func (m *DML) GetAdds() uint64 {
	if m != nil {
		return m.Adds
	}
	return 0
}

func (m *DML) GetUpdates() uint64 {
	if m != nil {
		return m.Updates
	}
	return 0
}

func (m *DML) GetDeletes() uint64 {
	if m != nil {
		return m.Deletes
	}
	return 0
}

type DDL struct {
	Sql                  string   `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DDL) Reset()         { *m = DDL{} }
func (m *DDL) String() string { return proto.CompactTextString(m) }
func (*DDL) ProtoMessage()    {}
func (*DDL) Descriptor() ([]byte, []int) {
	return fileDescriptor_4a58fb69f5240f34, []int{7}
}
func (m *DDL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DDL.Unmarshal(m, b)
}
func (m *DDL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DDL.Marshal(b, m, deterministic)
}
func (dst *DDL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DDL.Merge(dst, src)
}
func (m *DDL) XXX_Size() int {
	return xxx_messageInfo_DDL.Size(m)
}
func (m *DDL) XXX_DiscardUnknown() {
	xxx_messageInfo_DDL.DiscardUnknown(m)
}

var xxx_messageInfo_DDL proto.InternalMessageInfo

func (m *DDL) GetSql() string {
	if m != nil {
		return m.Sql
	}
	return ""
}

func init() {
	proto.RegisterType((*Binlog)(nil), "binary.Binlog")
	proto.RegisterType((*BinlogData)(nil), "binary.BinlogData")
	proto.RegisterType((*Stats)(nil), "binary.Stats")
	proto.RegisterType((*Stat)(nil), "binary.Stat")
	proto.RegisterType((*DBStat)(nil), "binary.DBStat")
	proto.RegisterType((*TableStat)(nil), "binary.TableStat")
	proto.RegisterType((*DML)(nil), "binary.DML")
	proto.RegisterType((*DDL)(nil), "binary.DDL")
}

func init() {
	proto.RegisterFile("github.com/waylennn/chaincode/adopter/protos/binary/db.proto", fileDescriptor_4a58fb69f5240f34)
}

var fileDescriptor_4a58fb69f5240f34 = []byte{
	// 386 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x52, 0xbf, 0xaf, 0x9b, 0x30,
	0x18, 0x14, 0x81, 0xd2, 0xf2, 0x11, 0x55, 0xad, 0x97, 0xa2, 0xa8, 0x55, 0x11, 0x13, 0x5d, 0x8c,
	0x94, 0xa8, 0x52, 0x87, 0x4e, 0x11, 0x63, 0xe8, 0xe0, 0x66, 0xaa, 0xda, 0xc1, 0x60, 0x97, 0x87,
	0x64, 0x30, 0x89, 0xcd, 0x90, 0xff, 0xfe, 0xc9, 0x36, 0x90, 0x48, 0x6f, 0x7b, 0x0b, 0xba, 0xfb,
	0xee, 0x74, 0xdf, 0x0f, 0x03, 0x3f, 0xdb, 0x4e, 0xe3, 0xcb, 0xc4, 0xaf, 0xb7, 0x86, 0x8e, 0xb8,
	0x91, 0x7d, 0xd1, 0x08, 0x39, 0xb1, 0xe6, 0x89, 0x76, 0x43, 0x61, 0xbf, 0x8d, 0x64, 0xbc, 0x18,
	0xaf, 0x52, 0x4b, 0x55, 0xd4, 0xdd, 0x40, 0xaf, 0xb7, 0x82, 0xd5, 0xd8, 0x16, 0x50, 0xe8, 0x0a,
	0xbb, 0xaf, 0xad, 0x94, 0xad, 0x98, 0x6d, 0xf5, 0xf4, 0xbf, 0xd0, 0x5d, 0xcf, 0x95, 0xa6, 0xfd,
	0xe8, 0x8c, 0xd9, 0x67, 0x08, 0x8f, 0xdd, 0x20, 0x64, 0x8b, 0x10, 0x04, 0x8c, 0x6a, 0x9a, 0x78,
	0xa9, 0x9f, 0x6f, 0x89, 0xc5, 0xd9, 0x5f, 0x00, 0xa7, 0x96, 0x54, 0x53, 0xb4, 0x83, 0x77, 0x8a,
	0x5f, 0x26, 0x3e, 0x34, 0x3c, 0xf1, 0x52, 0x2f, 0x0f, 0xc8, 0xca, 0xd1, 0x07, 0xf0, 0x85, 0x6c,
	0x93, 0x4d, 0xea, 0xe5, 0x5b, 0x62, 0x20, 0x4a, 0x21, 0x50, 0x9a, 0xea, 0xc4, 0x4f, 0xbd, 0x3c,
	0xde, 0x6f, 0xb1, 0x9b, 0x08, 0xff, 0xd6, 0x54, 0x13, 0xab, 0x64, 0xdf, 0xe0, 0x8d, 0x61, 0xca,
	0x58, 0xd7, 0xd6, 0x2f, 0xac, 0x76, 0x10, 0x06, 0x81, 0x61, 0xe8, 0x07, 0x44, 0xeb, 0x06, 0x76,
	0x86, 0x78, 0xbf, 0xc3, 0x6e, 0x47, 0xbc, 0xec, 0x88, 0xcf, 0x8b, 0x83, 0xdc, 0xcd, 0x28, 0x9b,
	0x7b, 0x6c, 0x6c, 0x8f, 0xf7, 0x4b, 0x8f, 0xf2, 0xf8, 0xd0, 0xa5, 0x82, 0xd0, 0x71, 0x73, 0x8c,
	0x5f, 0xb4, 0x77, 0x6b, 0x46, 0xc4, 0x62, 0x54, 0x40, 0xa4, 0x69, 0x2d, 0xb8, 0x31, 0xcc, 0x31,
	0x1f, 0x97, 0x98, 0xf3, 0x22, 0x90, 0xbb, 0x27, 0xfb, 0x07, 0xd1, 0x5a, 0x37, 0x89, 0xc3, 0x43,
	0xa2, 0xc1, 0xe8, 0x0b, 0xf8, 0xac, 0x17, 0xf6, 0x68, 0xf1, 0x3e, 0x5e, 0x47, 0xaa, 0x4e, 0xc4,
	0xd4, 0xad, 0xcc, 0xc4, 0x7c, 0xc0, 0xbb, 0x5c, 0x1a, 0x99, 0x89, 0xac, 0x02, 0xbf, 0xac, 0x4e,
	0x26, 0x98, 0x32, 0xa6, 0xe6, 0x17, 0xb1, 0x18, 0x25, 0xf0, 0x76, 0x1a, 0x19, 0xd5, 0x5c, 0xd9,
	0xf0, 0x80, 0x2c, 0xd4, 0x28, 0x8c, 0x0b, 0x6e, 0x14, 0xdf, 0x29, 0x33, 0xcd, 0x3e, 0x81, 0x5f,
	0x96, 0x27, 0xf3, 0x90, 0xea, 0x22, 0xe6, 0x31, 0x0d, 0x3c, 0x7e, 0xff, 0x73, 0x78, 0xc5, 0xbf,
	0x58, 0x87, 0x96, 0x1e, 0x9e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x57, 0x73, 0x29, 0xaa, 0xc9, 0x02,
	0x00, 0x00,
}
